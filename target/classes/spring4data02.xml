<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">
<!-- 어노테이션 기반 bean 설정 -->
    <context:component-scan base-package="sungtae.data.service, sungtae.data.dao" />
<!--  표준 JDBC API : 소규모  -->

    <!--  DBCP API : 대규모  -->
    <!--  database connection pool  -->
    <!--  요청이 생길때마다 connection 객체를 생성하는 것이 아니라  -->
    <!-- 일정 수의 connection 객체를 미리 만들어서 풀에 저장해두고 -->
    <!--  요청이 발생할때 풀에서 connection 객체를 가져다 사용하는 방식  -->
    <bean id="dbcpDataSource"
      class="org.apache.commons.dbcp2.BasicDataSource">
        <property name="driverClassName" value="org.mariadb.jdbc.Driver" />
        <property name="url" value="jdbc:mariadb://mariadb.cmhqke6zpvyh.us-east-2.rds.amazonaws.com:3306/playground" />
        <property name="username" value="master" />
        <property name="password" value="bigdata2020" />
    </bean>
    <!--  JNDI API : 분산환경  -->

<!--  스프링 JDBC template 정의  -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dbcpDataSource" />
    </bean>
</beans>